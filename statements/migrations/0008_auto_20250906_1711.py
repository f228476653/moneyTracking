# Generated by Django 4.2.24 on 2025-09-06 17:11

from django.db import migrations, models


def make_account_non_nullable(apps, schema_editor):
    """Ensure all statements have accounts before making field non-nullable"""
    Statement = apps.get_model('statements', 'Statement')
    Account = apps.get_model('statements', 'Account')
    
    # Get the default account
    default_account = Account.objects.filter(account_abbr='DEFAULT').first()
    if not default_account:
        # Create default account if it doesn't exist
        default_account = Account.objects.create(
            account_abbr='DEFAULT',
            bank_name='Unknown Bank',
            account_number='000000000',
            account_type='BANK'
        )
    
    # Update any remaining null accounts
    Statement.objects.filter(account__isnull=True).update(account=default_account)


def reverse_make_account_non_nullable(apps, schema_editor):
    """Reverse the migration"""
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('statements', '0007_auto_20250906_1710'),
    ]

    operations = [
        migrations.RunPython(make_account_non_nullable, reverse_make_account_non_nullable),
        migrations.AlterField(
            model_name='statement',
            name='account',
            field=models.ForeignKey(on_delete=models.deletion.CASCADE, related_name='statements', to='statements.account'),
        ),
    ]
